buildscript {
    repositories {
       mavenLocal()
       mavenCentral()
       jcenter()
    }
    dependencies {
        classpath group: 'com.opitzconsulting.orcas', name: 'orcas-gradle-plugin',
                  version: '7.6.0'

        classpath group: 'com.oracle.ojdbc', name: 'ojdbc8', version: '19.3.0.0'
    }
}

import com.opitzconsulting.orcas.gradle.*;

extensions.create("orcasconfiguration", OrcasGradlePluginExtension)

task('cleanLog', type:  OrcasCleanLogTask)

task('ddlInit', type: ExecuteOrcasOneTimeScriptsTask){
  scriptfolder='dml/init'
  logname = 'ddl-init'
}

task('dmlInit', dependsOn: 'ddlInit', type: ExecuteOrcasOneTimeScriptsTask){
  scriptfolder='dml/init'
  logname = 'dml-init'
}

task('ddlPre', dependsOn: 'dmlInit', type: ExecuteOrcasScriptsTask){
  scriptFiles=project.fileTree('ddl/pre')
  logname = 'ddl-pre'
}

task('dmlPre', dependsOn: 'ddlPre', type: ExecuteOrcasScriptsTask){
  scriptFiles=project.fileTree('dml/pre')
  logname = 'dml-pre'
}

task('tables', dependsOn: 'dmlPre', type:  OrcasUpdateStaticsTask){
  scriptFiles=project.fileTree(dir: '/', includes:['tables/','sequences/'])
}

task('tables_ddl', dependsOn: 'tables', type: ExecuteOrcasOneTimeScriptsTask){
  scriptfolder = ('tables_ddl')
  logname = 'tables_ddl'
}

task('dropReplaceables', dependsOn:'tables_ddl', type:  OrcasDropReplaceablesTask)

task('sources', dependsOn: 'dropReplaceables', type: ExecuteOrcasScriptsTask){
  scriptFiles=project.fileTree("sources/")
  logname="replaceables"
}

task('precompile', dependsOn: 'sources', type: ExecuteOrcasScriptsTask){
  scriptfolder="precompile"
  logname="precompile"
}

task('compileReplaceables',dependsOn: 'precompile', type:  OrcasCompileAllInvalidTask)

task('ddlPost', dependsOn: 'compileReplaceables', type: ExecuteOrcasOneTimeScriptsTask){
  scriptfolder=('ddl/post')
  logname = 'ddl-post'
}

task('dmlPost', dependsOn: 'ddlPost', type: ExecuteOrcasOneTimeScriptsTask){
  scriptfolder=('dml/post')
  logname = 'dml-post'
}

task('finally', dependsOn: 'postDML', type: ExecuteOrcasScriptsTask){
   scriptFiles=project.fileTree('finally/')
   logname="finally"
}

task('deployLogic', dependsOn: 'finally')


task('checkConnection', type: OrcasCheckConnectionTask){
  logname="checkcon"
}

ddlInit.onlyIf { project.file('ddl/init').exists() && project.mode == 'init' }
dmlInit.onlyIf { project.file('dml/init').exists() && project.mode == 'init' }
ddlPre.onlyIf { project.file('ddl/pre').exists()   && project.mode == 'patch' }
dmlPre.onlyIf { project.file('dml/pre').exists()   && project.mode == 'patch' }
tables.onlyIf { project.file('tables').exists() }
tables_ddl.onlyIf { project.file('tables_ddl').exists() }
dropReplaceables.onlyIf { project.mode == 'init' }
sources.onlyIf { project.file('sources').exists() }
precompile.onlyIf { project.file('precompile').exists() }
compileReplaceables.onlyIf { getNocompile() };
ddlPost.onlyIf { project.file('ddl/post').exists() }
dmlPost.onlyIf { project.file('dml/post').exists() }
finish.onlyIf { project.file('finally').exists() }
       
orcasconfiguration {
  jdbcurl = "jdbc:oracle:thin:@"+project.target
  username = project.username
  password = project.password
  loglevel = "info"
  extractreplaceablesoutfolder="src/main/sql/replaceables"
  staticsfolder="src/main/sql/statics"
  excludewhereobjecttype = "object_name not like '%sys%'"
}

def getNocompile() {
    return project.nocompile == 'false' ? true : false
}